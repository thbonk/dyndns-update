name: Build and Release

on:
 workflow_dispatch:
   inputs:
     version:
       description: 'Version number (without v prefix)'
       required: true
       type: string

jobs:
 build:
   name: Swift ${{ matrix.swift }} (${{ matrix.arch }})
   strategy:
     matrix:
       swift: ["6.0.3-noble", "6.0.3-jammy", "6.0.3-focal"]
       arch: [x86_64]
   runs-on: ubuntu-latest
   steps:
   - name: Checkout Sources
     uses: actions/checkout@v4
   - name: Build
     run: |
       docker run --name swift --security-opt seccomp=unconfined --volume $PWD:/prj swift:${{ matrix.swift }} /prj/build-in-docker.sh ${{ matrix.arch }}
       docker rm -v swift
       cp .build/release/${{ github.event.repository.name }} .
       chmod +x ${{ github.event.repository.name }}
   - name: Compress Binary
     run: tar -czf ${{ github.event.repository.name }}-${{ inputs.version }}-${{ matrix.swift }}-${{ matrix.arch }}.tar.gz ${{ github.event.repository.name }}
   - name: Upload Binary
     uses: actions/upload-artifact@v4
     with:
       name: ${{ github.event.repository.name }}-${{ inputs.version }}-${{ matrix.swift }}-${{ matrix.arch }}
       path: ${{ github.event.repository.name }}-${{ inputs.version }}-${{ matrix.swift }}-${{ matrix.arch }}.tar.gz

 release:
   name: Creating release v${{ inputs.version }}
   needs: build
   runs-on: ubuntu-latest
   steps:
   - uses: actions/checkout@v4
   - name: Download Artifacts
     uses: actions/download-artifact@v4
   - name: Create Source Archive
     run: |
       git archive --format=tar.gz --output=${{ github.event.repository.name }}-${{ inputs.version }}-src.tar.gz HEAD
   - name: Create Release
     uses: softprops/action-gh-release@v2
     with:
       name: Release v${{ inputs.version }}
       tag_name: v${{ inputs.version }}
       token: ${{ secrets.DYNDNS_UPDATE_GITHUB_TOKEN }}
       files: |
         ${{ github.event.repository.name }}-${{ inputs.version }}-*
         */*.tar.gz
